@model tal_DTC.Customer

@{
	ViewBag.Title = "LogIn";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
	body {
		padding: 100px;
		color: #000;
		background: #f6f7f8;
		text-align: center;
	}

	.form-control {
		margin: 0 auto;
		padding: 10px 0 10px;
		min-height: 41px;
		background: #fff;
		box-shadow: none !important;
		border-color: #e3e3e3;
		border: none;
		border-bottom: 2px solid #e3e3e3;
	}

	.form-control, .btn {
		border-radius: 2px;
	}

	.login-form {
		margin: auto;
		max-width: 350px;
		color: #000;
		border-radius: 2px;
		background: #fff;
		box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
		padding: 15px;
	}


		.login-form .btn, .login-form .btn:active {
			margin: auto;
			font-size: 16px;
			font-weight: bold;
			background: #577bf9 !important;
			border: none;
			margin-bottom: 20px;
			width: 50%;
		}

			.login-form .btn:hover, .login-form .btn:focus,
			.SignUp-form .btn:hover, .SignUp-form .btn:focus {
				background: #8aa3f8 !important;
			}

	

</style>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal login-form">
		<h3>Log In</h3>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">

			<div class="col-md-12">
				@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "User Name" } })
				@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-12">
				@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", type = "password" } })
				@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-12">
				<input type="submit" value="Create" class="btn btn-default" />
			</div>
		</div>
		<div>
			Don't have an account? @Html.ActionLink("SignUp", "SignUp")
		</div>
	</div>

}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
